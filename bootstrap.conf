#! /bin/echo this-file-should-be-sourced,-not-executed.
## -*- Mode: shell-script -*-

## bootstrap -- bootstrapping script
##
## Time-stamp:      "2012-11-25 14:07:09 bkorb"
##
##  This file is part of Complexity.
##  Complexity Copyright (c) 2011 by Bruce Korb - all rights reserved
##
## Complexity is free software: you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by the
## Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## Complexity is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
## See the GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  If not, see <http://www.gnu.org/licenses/>.
. bootstrap.std

initialize()
{
    set -e
    PS4='>BS-$FUNCNAME> '

    TRAPPED=false
    trap 'TRAPPED=true ; die "failed: ${_:-${FUNCNAME[0]}}"' 0
    builddir=$PWD
    mkdir m4 build-aux
    cd ${progdir}
    chmod a+x tests/*.test

    if test -d .git
    then
        git clean -f -x -d .
    else
        test -f .sdir || die "Cannot locate source directory"
        cd $(<.sdir)
    fi
    v=$(bash ~gnu/proj/gnulib/build-aux/git-version-gen \
            $progdir/.tarball-version)
    printf %s $v > $progdir/.tarball-version
    cd $progdir/src
    test -f opts.c -a -f opts.h -a opts.c -nt opts.def || \
        autogen opts.def

    test -f char-types.h -a char-types.h -nt char-types.map || \
        char-mapper char-types.map
    cd ..
    cp $(autoopts-config pkgdatadir)/liboptschk.m4 m4/.

    # Trick automake into "allowing" us to use texinfo rules:
    #
    printf '\\input texinfo\n@setfilename complexity.info\n' \
        > doc/complexity.texi

    gnulib_modules=$(echo       \
	close                   \
	fdl                     \
	gendocs                 \
	gpl-3.0                 \
	malloc-posix            \
	snprintf                \
	stdbool
    )
    set +e
}

untrap_die() {
    case "$(trap -p 0)" in
    *TRAPPED=true*' die '* )
        trap '' 0
        ;;
    esac
    ln build-aux/* .
}

initialize
func_add_hook func_fini untrap_die
